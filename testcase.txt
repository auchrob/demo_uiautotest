Functionality Test Case

1.Main Case
a.Click “Write article” button or click on the “input box”
b.Check the cursor move to “input box”
c.Input word “start test ” in the “input box”
d.Click “upload” link to choose file or drag a file to the “input box” , such as a.jpg
e.Check the file was uploaded.
f.Delete upload file, and reupload same file
g.Click “post” button, to post the article
h.Check the web to go article list page, and the article was correctly displayed

2.Input Case
a.Input individual or mix character,number, tab key, ctrl key, etc. such as “sadf323[]545345@#%^*   )_+_+” check that be allowed post and correctly display
b.Input individual or mix language, check that be allowed post and correctly display
c.Input space , click “post” will not be allowed
d.Input max words limit, depends on the request, there is words number limit or not
e.Copy and past the words in the “input box”, this is be allowed and correctly display

3.Image Upload Case
a.Size of file,such 0k, 256K.Check min and max size of file will be upload, otherwise not be allowed
b.Type of file, doc, picture,video,compressed file, execute file,etc.such as jpg,png,mp4,avi,zip,rar, exe,bat. Check valid or invalid
c.Valid name of file or directory
a)name of file or directory too long
b)special character,such as”)*%&&&&.f’”
c)invalid directory or file, such as ‘/../../df/da’
d)No file upload
d.Reupload, same or different file to reupload, check the result or upload
e.Shutdown the network, then recover, check the file can continues upload

4.Login Permission Test Case
a.Delete cookie or logout in a new browser tab
b.Click “post” button
c.Check the web request relogin

5.Post Case
a.Post different type of input
①Input space content, no upload file
②Input space content, upload file
③Input content, no upload file
④Input content,upload file

6.Interface Test Case
(1)Use postman to request post interface ,check the response
(2)Change the parameters, parameter type, empty one or several parameter, check the response
(3)Some security test below , change token, cookie, uri, A use B cookie.Check the response and permission.

Compatibility Test Case
1.Different Bowser, firefox, chrome,ie,safari, and popular version
2.Different device, mac, window, iphone, android, and popular version
3.Embedded websites, check the function

Security Test Case(Can use tools)
1.XSS, Input html or js in the “input box” will be not allowed.
<input type=”text” name=”user”/>
<script>alert('XSS attack');</script>
2.Sql inject , add ‘ or ‘1’=’1 to url the end. Check the permission and check sql execute log
url+ ‘ or ‘1’=’1
3.Not allowed upload execute file ,virus, illegal image ,such as bat,exe, sh
4.Change upload url, directory like \..\web or file name to .html. Check upload result and try to visit directory or file use url.
5.Check it is better to use token in the request for avoid csrf attacks. Change to header Origin,Referer to www.baidu.com, server should response the request is invalid
6.For web and interface, user A cookie to visit user B’s file or information, to check the permission.
7.Secret information must be encrypted, no plain text in url and cookie, such name,phone,password=123456,etc.

Performance Test Case

Web page performance test
Use chrome performance tool analysis page load time and memory,etc
Network test, use wifi, 3G,4G,5G or weak network,switch network to test performance
Different location to test performance

Interface performance test
1.use jmeter to simulate upload file
2.Analysis QPS and response time, the service machine cpu ,disk write. Etc. To find bottleneck or capacity

Stability Test Case
1. Simulate invalid response or no response, web page should not be crash

Usability Test Case
1. Click post the article, there is a alert to ask double check,etc.
2. Move to button or input box, display useful information or describe the function